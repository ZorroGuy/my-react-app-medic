{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Securra\\\\Documents\\\\GitHub\\\\my-react-app-medic\\\\src\\\\components\\\\LoginForm.jsx\",\n  _s = $RefreshSig$();\nimport TextField from \"@mui/material/TextField\";\nimport Box from \"@mui/material/Box\";\nimport FormControl from \"@mui/material/FormControl\";\nimport InputLabel from \"@mui/material/InputLabel\";\nimport OutlinedInput from \"@mui/material/OutlinedInput\";\nimport IconButton from \"@mui/material/IconButton\";\nimport InputAdornment from \"@mui/material/InputAdornment\";\nimport Visibility from \"@mui/icons-material/Visibility\";\nimport VisibilityOff from \"@mui/icons-material/VisibilityOff\";\nimport Button from \"@mui/material/Button\";\nimport { useState, useRef } from \"react\";\nimport { login } from \"../folder/PatientSlice\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useSelector, useDispatch } from \"react-redux\";\n//\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function LoginForm() {\n  _s();\n  const [showPassword, setShowPassword] = useState(false);\n  const handleClickShowPassword = () => setShowPassword(show => !show);\n  const handleMouseDownPassword = event => {\n    event.preventDefault();\n  };\n\n  //\n  const [Name, setName] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const navigate = useNavigate();\n  const userRef = useRef();\n  const dispatch = useDispatch();\n  const loginSelector = useSelector(state => state.user.user);\n  console.log(\"--------------\", loginSelector);\n  //User Credentials\n  const userCredentials = [{\n    user: \"Patient\",\n    password: 12345678,\n    role: \"Patient\"\n  }, {\n    user: \"Admin\",\n    password: 12345,\n    role: \"Admin\"\n  }];\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    // Logic check the logincredentials\n    let user = userCredentials.filter(users => {\n      if (users.user === Name && users.password === Number(password)) {\n        dispatch(login({\n          username: users.user,\n          role: users.role,\n          password: users.password\n        }));\n        return users;\n      }\n    });\n\n    //Condition to show error\n    if (user.length) {\n      navigate(\"/\");\n      console.log(user);\n    } else {\n      alert(\"Login Failed\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"loginPage\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"heading\",\n        children: \"Login Form\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Placeholder\",\n        children: [/*#__PURE__*/_jsxDEV(Box, {\n          component: \"form\",\n          sx: {\n            \"& > :not(style)\": {\n              m: 1,\n              width: \"28ch\"\n            }\n          },\n          noValidate: true,\n          autoComplete: \"off\",\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            id: \"outlined-basic\",\n            label: \"User\",\n            variant: \"outlined\",\n            ref: userRef,\n            value: Name,\n            required: true,\n            onChange: e => setName(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n          sx: {\n            m: 1,\n            width: \"28ch\"\n          },\n          variant: \"outlined\",\n          children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n            htmlFor: \"outlined-adornment-password\",\n            children: \"Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(OutlinedInput, {\n            id: \"outlined-adornment-password\",\n            type: showPassword ? \"text\" : \"password\",\n            value: password,\n            ref: userRef,\n            onChange: e => setPassword(e.target.value),\n            endAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n              position: \"end\",\n              children: /*#__PURE__*/_jsxDEV(IconButton, {\n                \"aria-label\": \"toggle password visibility\",\n                onClick: handleClickShowPassword,\n                onMouseDown: handleMouseDownPassword,\n                edge: \"end\",\n                children: showPassword ? /*#__PURE__*/_jsxDEV(VisibilityOff, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 114,\n                  columnNumber: 37\n                }, this) : /*#__PURE__*/_jsxDEV(Visibility, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 114,\n                  columnNumber: 57\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 108,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 17\n            }, this),\n            label: \"Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        className: \"button\",\n        type: \"submit\",\n        onClick: handleSubmit,\n        children: \"LOGIN\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 5\n  }, this);\n}\n_s(LoginForm, \"4keLNmffM3RPQXAZ1UYOnxnGCP4=\", false, function () {\n  return [useNavigate, useDispatch, useSelector];\n});\n_c = LoginForm;\nvar _c;\n$RefreshReg$(_c, \"LoginForm\");","map":{"version":3,"names":["TextField","Box","FormControl","InputLabel","OutlinedInput","IconButton","InputAdornment","Visibility","VisibilityOff","Button","useState","useRef","login","useNavigate","useSelector","useDispatch","jsxDEV","_jsxDEV","LoginForm","_s","showPassword","setShowPassword","handleClickShowPassword","show","handleMouseDownPassword","event","preventDefault","Name","setName","password","setPassword","navigate","userRef","dispatch","loginSelector","state","user","console","log","userCredentials","role","handleSubmit","e","filter","users","Number","username","length","alert","className","children","onSubmit","fileName","_jsxFileName","lineNumber","columnNumber","component","sx","m","width","noValidate","autoComplete","id","label","variant","ref","value","required","onChange","target","htmlFor","type","endAdornment","position","onClick","onMouseDown","edge","_c","$RefreshReg$"],"sources":["C:/Users/Securra/Documents/GitHub/my-react-app-medic/src/components/LoginForm.jsx"],"sourcesContent":["import TextField from \"@mui/material/TextField\";\r\nimport Box from \"@mui/material/Box\";\r\nimport FormControl from \"@mui/material/FormControl\";\r\nimport InputLabel from \"@mui/material/InputLabel\";\r\nimport OutlinedInput from \"@mui/material/OutlinedInput\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport InputAdornment from \"@mui/material/InputAdornment\";\r\nimport Visibility from \"@mui/icons-material/Visibility\";\r\nimport VisibilityOff from \"@mui/icons-material/VisibilityOff\";\r\nimport Button from \"@mui/material/Button\";\r\nimport { useState, useRef } from \"react\";\r\nimport { login } from \"../folder/PatientSlice\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\n//\r\nexport default function LoginForm() {\r\n  const [showPassword, setShowPassword] = useState(false);\r\n\r\n  const handleClickShowPassword = () => setShowPassword((show) => !show);\r\n  const handleMouseDownPassword = (event) => {\r\n    event.preventDefault();\r\n  };\r\n\r\n  //\r\n  const [Name, setName] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n\r\n  const navigate = useNavigate();\r\n  const userRef = useRef();\r\n  const dispatch = useDispatch();\r\n  const loginSelector = useSelector((state) => state.user.user);\r\n  console.log(\"--------------\", loginSelector);\r\n  //User Credentials\r\n  const userCredentials = [\r\n    {\r\n      user: \"Patient\",\r\n      password: 12345678,\r\n      role: \"Patient\",\r\n    },\r\n    {\r\n      user: \"Admin\",\r\n      password: 12345,\r\n      role: \"Admin\",\r\n    },\r\n  ];\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    // Logic check the logincredentials\r\n    let user = userCredentials.filter((users) => {\r\n      if (users.user === Name && users.password === Number(password)) {\r\n        dispatch(\r\n          login({\r\n            username: users.user,\r\n            role: users.role,\r\n            password: users.password,\r\n          })\r\n        );\r\n        return users;\r\n      }\r\n    });\r\n\r\n    //Condition to show error\r\n    if (user.length) {\r\n      navigate(\"/\");\r\n      console.log(user);\r\n    } else {\r\n      alert(\"Login Failed\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"loginPage\">\r\n      <form onSubmit={handleSubmit}>\r\n        <h1 className=\"heading\">Login Form</h1>\r\n        <div className=\"Placeholder\">\r\n          <Box\r\n            component=\"form\"\r\n            sx={{\r\n              \"& > :not(style)\": { m: 1, width: \"28ch\" },\r\n            }}\r\n            noValidate\r\n            autoComplete=\"off\"\r\n          >\r\n            <TextField\r\n              id=\"outlined-basic\"\r\n              label=\"User\"\r\n              variant=\"outlined\"\r\n              ref={userRef}\r\n              value={Name}\r\n              required\r\n              onChange={(e) => setName(e.target.value)}\r\n            />\r\n          </Box>\r\n\r\n          <FormControl sx={{ m: 1, width: \"28ch\" }} variant=\"outlined\">\r\n            <InputLabel htmlFor=\"outlined-adornment-password\">\r\n              Password\r\n            </InputLabel>\r\n            <OutlinedInput\r\n              id=\"outlined-adornment-password\"\r\n              type={showPassword ? \"text\" : \"password\"}\r\n              value={password}\r\n              ref={userRef}\r\n              onChange={(e) => setPassword(e.target.value)}\r\n              endAdornment={\r\n                <InputAdornment position=\"end\">\r\n                  <IconButton\r\n                    aria-label=\"toggle password visibility\"\r\n                    onClick={handleClickShowPassword}\r\n                    onMouseDown={handleMouseDownPassword}\r\n                    edge=\"end\"\r\n                  >\r\n                    {showPassword ? <VisibilityOff /> : <Visibility />}\r\n                  </IconButton>\r\n                </InputAdornment>\r\n              }\r\n              label=\"Password\"\r\n            />\r\n          </FormControl>\r\n        </div>\r\n        <Button\r\n          variant=\"contained\"\r\n          className=\"button\"\r\n          type=\"submit\"\r\n          onClick={handleSubmit}\r\n        >\r\n          LOGIN\r\n        </Button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}